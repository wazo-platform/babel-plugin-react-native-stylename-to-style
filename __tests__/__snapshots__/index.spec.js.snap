// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel-plugin-react-native-stylename-to-style Generated code shoud match 'Should transform single styleName to styles object' test : Generated code shoud match 'Should transform single styleName to styles object' test  1`] = `
"
import styles from './Button.css';
const Foo = () =>  <View style={styles.wrapper}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _Button2.default.wrapper },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should NOT transform styleName if the import extension does not match the one in plugin options: Should NOT transform styleName if the import extension does not match the one in plugin options 1`] = `
"
import './Button.scss';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

require(\\"./Button.scss\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { styleName: \\"wrapper\\" },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should NOT transform styleName if there is no import: Should NOT transform styleName if there is no import 1`] = `
"
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var Foo = function Foo() {
  return React.createElement(
    View,
    { styleName: \\"wrapper\\" },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should add anonymous import: Should add anonymous import 1`] = `
"
const Foo = () =>  <View styleName=\\"login-logo\\" height={15}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _styles = require(\\"@whitelabel/values/styles.css\\");

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _reactNativeDynamicStyleProcessor.process(_styles2.default)[\\"login-logo\\"], height: _reactNativeDynamicStyleProcessor.process(_styles2.default)[\\"login-logo\\"] && _reactNativeDynamicStyleProcessor.process(_styles2.default)[\\"login-logo\\"].height || 15, width: _reactNativeDynamicStyleProcessor.process(_styles2.default)[\\"login-logo\\"] && _reactNativeDynamicStyleProcessor.process(_styles2.default)[\\"login-logo\\"].width
    },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should ignore anonymous imports with other extensions and transform single styleName to styles object: Should ignore anonymous imports with other extensions and transform single styleName to styles object 1`] = `
"
import './foo.js';
import './Button.css';
import './Button.scss';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

require('./foo.js');

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

require('./Button.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should not clash with existing requires with the same name (reactNativeDynamicStyleProcessor): Should not clash with existing requires with the same name (reactNativeDynamicStyleProcessor) 1`] = `
"
import './Button.css';
var reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");
var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");
var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var _reactNativeDynamicStyleProcessor2 = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _reactNativeDynamicStyleProcessor2.process(_Button2.default).wrapper },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support expression with single styleName output and existing style. Variable: Should support expression with single styleName output and existing style. Variable 1`] = `
"
import './Button.css';
let x = 'wrapper';
const Foo = () => <View styleName={x} style={{ height: 1 }}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var x = 'wrapper';
var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [(x || '').split(' ').filter(Boolean).map(function (name) {
        return _reactNativeDynamicStyleProcessor.process(_Button2.default)[name];
      }), { height: 1 }] },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support expression with single styleName output and named import. Variable: Should support expression with single styleName output and named import. Variable 1`] = `
"
import foo from './Button.css';
let x = 'wrapper';
const Foo = () => <View styleName={x}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var x = 'wrapper';
var Foo = function Foo() {
  return React.createElement(
    View,
    { style: (x || '').split(' ').filter(Boolean).map(function (name) {
        return _reactNativeDynamicStyleProcessor.process(_Button2.default)[name];
      }) },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support expression with single styleName output. Conditional: Should support expression with single styleName output. Conditional 1`] = `
"
import './Button.css';
let x = 'wrapper';
let condition = true;
const Foo = () => <View styleName={condition ? x : 'bar'}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var x = 'wrapper';
var condition = true;
var Foo = function Foo() {
  return React.createElement(
    View,
    { style: ((condition ? x : 'bar') || '').split(' ').filter(Boolean).map(function (name) {
        return _reactNativeDynamicStyleProcessor.process(_Button2.default)[name];
      }) },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support expression with single styleName output. Variable: Should support expression with single styleName output. Variable 1`] = `
"
import './Button.css';
let x = 'wrapper';
const Foo = () => <View styleName={x}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var x = 'wrapper';
var Foo = function Foo() {
  return React.createElement(
    View,
    { style: (x || '').split(' ').filter(Boolean).map(function (name) {
        return _reactNativeDynamicStyleProcessor.process(_Button2.default)[name];
      }) },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support multiple named imports and hyphens: Should support multiple named imports and hyphens 1`] = `
"
import foo from './Button.css';
import bar from './Grid.css';
const Foo = () => <View styleName=\\"foo.main-wrapper bar.left-column\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

var _Grid = require('./Grid.css');

var _Grid2 = _interopRequireDefault(_Grid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default)['main-wrapper'], _reactNativeDynamicStyleProcessor.process(_Grid2.default)['left-column']] },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support multiple named imports and ignore a class without object and property: Should support multiple named imports and ignore a class without object and property 1`] = `
"
import foo from './Button.css';
import bar from './Grid.css';
const Foo = () => <View styleName=\\"foo.wrapper bar.column invalid\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

var _Grid = require('./Grid.css');

var _Grid2 = _interopRequireDefault(_Grid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper, _reactNativeDynamicStyleProcessor.process(_Grid2.default).column] },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support multiple named imports and merge with style tag: Should support multiple named imports and merge with style tag 1`] = `
"
import foo from './Button.css';
import bar from './Grid.css';
const Foo = () => <View styleName=\\"foo.wrapper bar.column\\" style={{ height: 1 }}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

var _Grid = require('./Grid.css');

var _Grid2 = _interopRequireDefault(_Grid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper, _reactNativeDynamicStyleProcessor.process(_Grid2.default).column, { height: 1 }] },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support multiple named imports with the same classname: Should support multiple named imports with the same classname 1`] = `
"
import foo from './Button.css';
import bar from './Grid.css';
import baz from '../Text.scss';
const Foo = () => <View styleName=\\"baz.wrapper foo.wrapper bar.wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

var _Grid = require('./Grid.css');

var _Grid2 = _interopRequireDefault(_Grid);

var _Text = require('../Text.scss');

var _Text2 = _interopRequireDefault(_Text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Text2.default).wrapper, _reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper, _reactNativeDynamicStyleProcessor.process(_Grid2.default).wrapper] },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support multiple named imports: Should support multiple named imports 1`] = `
"
import foo from './Button.css';
import bar from './Grid.css';
const Foo = () => <View styleName=\\"foo.wrapper bar.column\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

var _Grid = require('./Grid.css');

var _Grid2 = _interopRequireDefault(_Grid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper, _reactNativeDynamicStyleProcessor.process(_Grid2.default).column] },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support named import and a single class with hyphen: Should support named import and a single class with hyphen 1`] = `
"
import foo from './Button.css';
const Foo = () => <View styleName=\\"foo.main-wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _reactNativeDynamicStyleProcessor.process(_Button2.default)[\\"main-wrapper\\"] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support named import and a single class: Should support named import and a single class 1`] = `
"
import foo from './Button.css';
const Foo = () => <View styleName=\\"foo.wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support named import and multiple classes with hyphen: Should support named import and multiple classes with hyphen 1`] = `
"
import foo from './Button.css';
const Foo = () => <View styleName=\\"foo.main-wrapper foo.red-bg\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default)[\\"main-wrapper\\"], _reactNativeDynamicStyleProcessor.process(_Button2.default)[\\"red-bg\\"]] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should support named import and multiple classes: Should support named import and multiple classes 1`] = `
"
import foo from './Button.css';
const Foo = () => <View styleName=\\"foo.wrapper foo.red\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper, _reactNativeDynamicStyleProcessor.process(_Button2.default).red] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should throw an error when multiple anonymous imports are used: Should throw an error when multiple anonymous imports are used 1`] = `
"
import './Button.css';
import './Text.css';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

Error: index.js: Cannot use anonymous style name with more than one stylesheet import.
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should throw an error when multiple anonymous imports are used: Should throw an error when multiple anonymous imports are used 2`] = `
"
import './Button.css';
import foo from './foo.js';
import './Text.css';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

Error: index.js: Cannot use anonymous style name with more than one stylesheet import.
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should throw because of multiple valid imports: Should throw because of multiple valid imports 1`] = `
"
import './Button.scss';
import './Button.less';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

Error: index.js: Cannot use anonymous style name with more than one stylesheet import.
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should throw if no extensions defined in options: Should throw if no extensions defined in options 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

Error: index.js: You have not specified any extensions in the plugin options.
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform Less import: Should transform Less import 1`] = `
"
import './Button.css';
import './Button.less';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

require('./Button.css');

var _Button = require('./Button.less');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform SCSS import: Should transform SCSS import 1`] = `
"
import './Button.css';
import './Button.scss';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

require('./Button.css');

var _Button = require('./Button.scss');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require('react-native-dynamic-style-processor');

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform multiple styleName classes to styles object and merge with style tag: Should transform multiple styleName classes to styles object and merge with style tag 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"wrapper red\\" style={{ marginTop: 10 }}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper, _reactNativeDynamicStyleProcessor.process(_Button2.default).red, { marginTop: 10 }] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform multiple styleName classes to styles object: Should transform multiple styleName classes to styles object 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"wrapper red\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper, _reactNativeDynamicStyleProcessor.process(_Button2.default).red] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform multiple styleName classes with whitespace to styles object: Should transform multiple styleName classes with whitespace to styles object 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"  wrapper  red  \\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper, _reactNativeDynamicStyleProcessor.process(_Button2.default).red] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform multiple styleNames with hyphen to styles object: Should transform multiple styleNames with hyphen to styles object 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"main-wrapper red-bg something-else\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default)[\\"main-wrapper\\"], _reactNativeDynamicStyleProcessor.process(_Button2.default)[\\"red-bg\\"], _reactNativeDynamicStyleProcessor.process(_Button2.default)[\\"something-else\\"]] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform nested single styleNames to styles object: Should transform nested single styleNames to styles object 1`] = `
"
import './Button.css';
const Foo = () =>  <View style={{ width: \\"100%\\" }}><View styleName=\\"wrapper\\"><Text styleName=\\"red\\">Foo</Text></View></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: { width: \\"100%\\" } },
    React.createElement(
      View,
      { style: _reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper },
      React.createElement(
        Text,
        { style: _reactNativeDynamicStyleProcessor.process(_Button2.default).red },
        \\"Foo\\"
      )
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform single styleName to styles object and merge with style tag: Should transform single styleName to styles object and merge with style tag 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"wrapper\\" style={{ marginTop: 10 }}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper, { marginTop: 10 }] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform single styleName to styles object with multiple elements: Should transform single styleName to styles object with multiple elements 1`] = `
"
import './Button.css';
const Foo = () =>  <View><View styleName=\\"wrapper\\"><Text>Foo</Text></View><View styleName=\\"dark\\"><Text>Foo</Text></View></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    null,
    React.createElement(
      View,
      { style: _reactNativeDynamicStyleProcessor.process(_Button2.default).wrapper },
      React.createElement(
        Text,
        null,
        \\"Foo\\"
      )
    ),
    React.createElement(
      View,
      { style: _reactNativeDynamicStyleProcessor.process(_Button2.default).dark },
      React.createElement(
        Text,
        null,
        \\"Foo\\"
      )
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform single styleName to styles object: Should transform single styleName to styles object 1`] = `
"
const Foo = () =>  <View styleName=\\"login-logo\\" height={15}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var Foo = function Foo() {
  return React.createElement(
    View,
    { styleName: \\"login-logo\\", height: 15 },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform single styleName with hyphen to styles object: Should transform single styleName with hyphen to styles object 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"main-wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _reactNativeDynamicStyleProcessor = require(\\"react-native-dynamic-style-processor\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _reactNativeDynamicStyleProcessor.process(_Button2.default)[\\"main-wrapper\\"] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;
